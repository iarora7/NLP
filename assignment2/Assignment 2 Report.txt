Assignment 2 Report
Name: Isha Arora
Part I.
1. Performance of standard perceptron on the development data with 100% of the training
data
1a. spam precision: 0.9895287958115183
1b. spam recall: 0.9771428571428571
1c. spam F1 score: 0.9832968236582694
1d. ham precision: 0.9456662354463131
1e. ham recall: 0.9746666666666667
1f. ham F1 score: 0.9599474720945502
2. Performance of averaged perceptron on the development data with 100% of the training
data
2a. spam precision: 0.9839368363735366
2b. spam recall: 0.9834013605442177
2c. spam F1 score: 0.9836690255851931
2d. ham precision: 0.9593874833555259
2e. ham recall: 0.9606666666666667
2f. ham F1 score: 0.9600266489007329
Part II.
3. Performance of standard perceptron on the development data with 10% of the training
data
3a. spam precision: 0.9616835994194485
3b. spam recall: 0.9014965986394557
3c. spam F1 score: 0.93061797752809
3d. ham precision: 0.7907514450867053
3e. ham recall: 0.912
3f. ham F1 score: 0.8470588235294118
4. Performance of averaged perceptron on the development data with 10% of the training
data
4a. spam precision: 0.9590660132603056
4b. spam recall: 0.9053061224489796
4c. spam F1 score: 0.931410974244121
4d. ham precision: 0.7960140679953107
4e. ham recall: 0.9053333333333333
4f. ham F1 score: 0.8471615720524017
Part III. You are welcome to reuse code you wrote for assignment 1,
but we would like to know how you handled the following tasks.
5. How did you calculate precision, recall and F1 score? If you used a
separate script, please give the name of the script and describe how
to run it.

I created a script called accuracy.py (submitted along with the code) which calculates precision, recall, F1 score and weigthed avg of ham and spam from the output file.
The formulae used are:
pspam = correctSpam/labelSpam
pham = correctHam/labelHam
rspam = correctSpam/actaulSpam
rham = correctHam/actualHam
fspam = (2 * pspam * rspam)/(pspam + rspam)
fham = (2 * pham * rham)/(pham + rham)
weighted_average = ((actaulSpam * fspam)/totalFiles) + ((actualHam * fham)/totalFiles)

To run this script change the variable named path (path = 'per_output.txt') to either the output file name if it is locally present or give the path of the output file.

6. How did you separate 10% of the training data? If you used a
separate script, please give the name of the script and describe how
to run it. Explain how you or your code choose the files.

The data provided to us had 17029 files in total out of which there were 7496 spam files and 9533 ham files. I modified my code to take only 10% of each set. Hence the statements spam_limit = 749, ham_limit = 953 (if "spam" in fpath and spam_count < spam_limit and elif "ham" in fpath and ham_count < ham_limit) ensure that only 749 spam files and 953 ham files are picked out of the total pool of train data.
To run these files, change the spam_limit and ham_limit counts to 10% of the total spam and ham file count respectively.